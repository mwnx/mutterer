# General account configuration.
#
# Provides the following groups:
# - imap_defaults: offlineimap related defaults
# - smtp_defaults: msmtp related defaults
# - mutt_defaults: mutt related defaults
# - defaults: all of the above
# - mutt_defaults_extra: mutt defaults with some perhaps less common stuff
# - defaults_extra: all of the above
#
# You'll probably want to simply add your accounts to 'defaults' of
# 'defaults_extra' depending on your preference.
#
# Depends on:
# - folder:    Shortcut for mutt.folder.
# - name:      Shortcut for mutt.realname.
# - address:   Shortcut for mutt.from.
# - password:  Shortcut for smtp.password and imap.password, or, if no
#              password is provided, mutterer will instruct offlineimap and
#              msmtp to attempt to decrypt a gpg encrypted file for the
#              current user:
#                  ~/.mutterer/keys/%id.asc
#              This file should contain only the password and be encrypted
#              with one of your PGP keys.
#              If you have gpg-agent running, it should prompt you for a
#              passphrase when you attempt to send or receive email.
# - smtp_host: Either smtp.host or smpt.host:smtp.port
#              e.g. example.com or example.com:666
# - imap_host: Same as smtp_host but for imap
#
# smtp_host and imap_host are in the format: host(:port)?
# e.g. mail.example.com or mail.example.com:999
#
# Optional: goto_account_key, source_account_key, goto_subdir_key, box,
#           imap_type, imap_ssl, imap_filter, smtp.tls_fingerprint,

:. $MUTTERER_SYSTEM_PRESETS/lib

# The main_account group should only contain one account.
[accounts %main_account]
MUTT.'source ' += ~/.mutterer/configs/_%{id}/muttrc

[groups]
defaults            += %{defaults_extra:-}
mutt_defaults_extra += %{defaults_extra:-}
mutt_defaults       += %{defaults:-} %{mutt_defaults_extra:-}
imap_defaults       += %{defaults:-}
smtp_defaults       += %{defaults:-}
ssl_defaults        += %{imap_defaults:-} %{smtp_defaults:-}

# anycase text : generates output of the form "[tT][eE][xX][tT]1_[aA]" from
# an input of the form "text1_A".
:function anycase()
:{
:    sed 's/[a-zA-Z]/[\L&\U&]/g' <<< "$1"
:}

# anycase_file path_prefix path_suffix
# E.g. "anycase_file ~/.mail/ John" returns the evaluated form of
# ~/.mail/[jJ][oO][hH][nN] if a matching file exists, ~/.mail/John otherwise
# (i.e. the supplied casing is used by default).
:function anycase_file()
:{
:    local pattern=$(anycase "$2")
:    local file=$(printn "$1"$pattern)
:    if [[ -e "$file" ]]; then printn "$file"
:    else printn "$1$2"
:    fi
:}

# first_file path_prefix folder_candidate1 [...]
# E.g. "first_file ~/.mail/ Spam Junk" returns the first existing file or
# directory in ~/.mail/, ~/.mail/Spam otherwise
:function first_file()
:{
:    local dir=$1
:    shift
:    local f
:    local file=
:    for f in "$@"; do
:        if [[ -e "$(printn "$dir"$f)" ]]; then
:            file=$(printn "$dir"$f)
:            break
:        fi
:    done
:    if [[ -z "$file" ]]; then
:        printn "${dir}$1"
:    else
:        printn "$file"
:    fi
:}

[general]
imap.pythonfile = "$MUTTERER_SYSTEM_PRESETS/offlineimap_pythonfile.py"

[accounts %{mutt_defaults:-}]
mutt.realname                  ?= "\"%{name}\""
mutt.my_hdr Name:              ?= "\"%{name}\""
mutt.from                      ?= "%{address}"
mutt.sendmail                  ?= "\"/usr/bin/msmtp -a %{id}\""
mutt.signature                 ?= "$(\
    if [[ -z "%{signature:+-}" ]]; then echo "~/.mutterer/%{id}.sig";\
    else echo "\"echo \\\"%signature\\\" |\"";\
    fi\
)"
mutt.folder                    ?= "%folder/"
box                            ?= "%folder/%id"
spoolfile                      ?= "$(anycase_file "%box/" INBOX)"
record                         ?= "$(anycase_file "%box/" Sent)"
postponed                      ?= "$(anycase_file "%box/" Drafts)"
trash                          ?= "$(anycase_file "%box/" Trash)"
mutt.spoolfile                 ?= "\"%spoolfile\""
mutt.record                    ?= "\"%record\""
mutt.postponed                 ?= "\"%postponed\""
mutt.trash                     ?= "\"%trash\""
mutt.mbox_type                 ?= Maildir
goto_account_key               ?= g
source_account_key             ?= %{goto_account_key}-
MUTT.macro index,pager %{goto_account_key}%{account_key} ?= "\"<change-folder>$(escape_spaces "%{mutt.spoolfile}")\n\""
MUTT.macro index,pager %{source_account_key}%{account_key} ?= "\"<enter-command>source ~/.mutterer/configs/_%{id}/muttrc\n\""
MUTT.folder-hook "\"%{box}/\"/*" ?= source ~/.mutterer/configs/_%{id}/muttrc
MUTT.'mailboxes ' ?~= "$([[ ! -d "%{box}" ]] || \
    echo "\`find \"%box\" -maxdepth 1 -mindepth 0 -type d -printf \"'%box/%""P' \"\`")"

[accounts %{mutt_defaults_extra:-}]
goto_subdir_key        ?= _
junk                   ?= $(first_file "%box/" Spam "$(anycase spam)" "$(anycase junk)")
mutt.macro index,pager += %{goto_subdir_key}i "\"<change-folder>$(escape_spaces "%{spoolfile}")\n\""
mutt.macro index,pager += %{goto_subdir_key}s "\"<change-folder>$(escape_spaces "%{record}")\n\""
mutt.macro index,pager += %{goto_subdir_key}d "\"<change-folder>$(escape_spaces "%{postponed}")\n\""
mutt.macro index,pager += %{goto_subdir_key}t "\"<change-folder>$(escape_spaces "%{trash}")\n\""
mutt.macro index,pager += %{goto_subdir_key}j "\"<change-folder>$(escape_spaces "%{junk}")\n\""
sync_current_key       ?= S
xterm_exec             ?= /usr/bin/xterm -e
mutt.macro index,pager += %{sync_current_key} "\"<shell-escape>%{xterm_exec} 'offlineimap -o -a %{id} || read -n1'&<enter>\""

[accounts %{ssl_defaults:-}]
sslcacertfile                        ?= /etc/ssl/certs/ca-certificates.crt

[accounts %{imap_defaults:-}]
imap_account.localrepository         ?= local_%{id}
imap_account.remoterepository        ?= remote_%{id}
imap_local.type                      ?= Maildir
imap_local.localfolders              ?= "%box"
imap_remote.remoteuser               ?= %{address}
imap_type                            ?= IMAP
imap_remote.type                     ?= %{imap_type}
imap_remote.remotehost               ?= %{imap_host%:*}
imap_remote.remoteport              ?~= $([[ ! "%{imap_host}" =~ : ]] ||\
                                          printn "%{imap_host#*:}")
imap_remote.ssl                     ?~= %{imap_ssl:-}
imap_remote.remotepass              ?~= %{password:-}
imap_remote.remotepasseval          ?~= "$([[ -n "%{password:-}" ]] ||\
                                           printn "mailpasswd(\"%{id}\")")"
imap_remote.folderfilter            ?~= %{imap_filter:-}
imap_remote.sslcacertfile           ?~= "$(\
    [[ ! -r "%sslcacertfile" ]] \
    || printn "%sslcacertfile")"

[accounts %{smtp_defaults:-}]
smtp.user             ?= %{address}
smtp.from             ?= %{address}
smtp.host             ?= %{smtp_host%:*}
smtp.port            ?~= $([[ ! "%{smtp_host}" =~ : ]] || printn "%{smtp_host#*:}")
smtp.password        ?~= %{password:-}
smtp.auth             ?= on
smtp.tls_trust_file  ?~= "$(\
    [[ -n "%{smtp.tls_fingerprint:-}" || \
       "%{smtp.tls_certcheck:-}" == off || \
       ! -r "%sslcacertfile" ]] \
    || printn "%sslcacertfile")"
smtp.logfile          ?= ~/.msmtp/%{id}.log
smtp.passwordeval    ?~= $([[ -n "%{password:-}" ]] || printn \
    "gpg --use-agent --quiet --batch -d ~/.mutterer/keys/%{id}.asc")
